<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | Hi. I'm Scott Zhu]]></title>
  <link href="http://zhuhuihuihui.github.io/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://zhuhuihuihui.github.io/"/>
  <updated>2014-08-14T00:11:12+08:00</updated>
  <id>http://zhuhuihuihui.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Manage Xcode project using Github]]></title>
    <link href="http://zhuhuihuihui.github.io/blog/2014/07/24/link-a-xcode-project-to-github-repo/"/>
    <updated>2014-07-24T18:52:58+08:00</updated>
    <id>http://zhuhuihuihui.github.io/blog/2014/07/24/link-a-xcode-project-to-github-repo</id>
    <content type="html"><![CDATA[<p>Use <a href="github.com">Github</a> to source control your Xcode project is really cool and rather convenient. Many of you may have tried to upload or link your current Xcode project to Github, but found it’s annoying because you always got some slight problems that stopped you from reaching there.</p>

<p>Here, i’d like to tell you a really simple way to quickly upload  your current project, or a new project, to Github and start to source control it immediately.</p>

<p>Few things that should be prepared before start:</p>

<ul>
<li>A Github account</li>
<li>Github app for Mac, <a href="https://mac.github.com">download</a> the latest version.</li>
<li>A Xcode project that you’d like to push onto Github</li>
</ul>


<p>Okay, now if you’re ready, let’s start.</p>

<h2>Step 1, Create a new repository where you wanna push your project to.</h2>

<p>Here i’ve create a new repo called <strong>MyXcodeProject</strong>
<img src="https://dl.dropboxusercontent.com/s/wqlezx8mv34t2xn/Create%20Project%20on%20Github.png" alt="" /></p>

<p>Once it has been successfully created, you shall see your new repo like this
<img src="https://dl.dropboxusercontent.com/s/8id6wdkl5f877mf/successfully%20created%20repo.png" alt="" /></p>

<h2>Step 2, Open <a href="https://mac.github.com">Github for Mac</a> Client, find and download the project that you just create.</h2>

<p>Open the Client, select <code>File -&gt; New Repository</code>  or simply press <code>command + N</code>, find the project that we just created under  <strong>Clone</strong> tap.
<img src="https://dl.dropboxusercontent.com/s/ww0rv8k7piqln6h/find%20the%20repo%20just%20create.png" alt="" /></p>

<p>Press the <strong>Clone MyXcodeProject</strong> button, choose whatever directory that you want to put this project, <strong>/Desktop</strong> for example. Once it’s successfully cloned, you shall see something like this.
<img src="https://dl.dropboxusercontent.com/s/jwwjw9fer9a1oh3/successfully%20downloaded%20the%20repo.png" alt="" /></p>

<h2>Step 3, Move your own project into the <strong>MyXcodeProject</strong> folder that you just cloned.</h2>

<p>At this stage, you should have an almost empty folder that you just cloned from the Github server.
<img src="https://dl.dropboxusercontent.com/s/6ju9sv4nbiv1pya/empty%20cloned%20folder.png" alt="" /></p>

<p>Also, you need to have your own project that you want to push onto github. It could be any projects, either a new project or a old project that you’ve been developed for years.</p>

<p>I just created a new project called <strong>MyXcodeProjectDemo</strong>, and i want it managed by Github under source control.
<img src="https://dl.dropboxusercontent.com/s/iw7mwucuz08sscb/your%20own%20project.png" alt="" /></p>

<p>Now, move all files and folders under your <strong>MyXcodeProjectDemo</strong> project into the previous cloned folder, like this.
<img src="https://dl.dropboxusercontent.com/s/p1mqwfeql1wph8w/Move%20into%20new%20folder.png" alt="" /></p>

<h2>Step 4, In the Github for Mac client, commit all changes that you’ve just made.</h2>

<p>Open up you Github client for Mac, click on the <strong>MyXcodeProject</strong> tab on the very left side. You could see quit a lot changes here, Woooooo.
<img src="https://dl.dropboxusercontent.com/s/9rmgz6p344fwjjv/commit%20changes.png" alt="" /></p>

<p>Press the Commit&amp;Sync button. Once it’s be been successfully committed and synced, open <a href="https://github.com">Github</a> page, find the corresponding  repository page, you should see the whole project should have been uploaded.
Before you go to the next step, please <strong>copy the link of your repo</strong>, you can do this by clicking the place where my arrow pointing to in the image.</p>

<p><img src="https://dl.dropboxusercontent.com/s/12oc8iyhwixuvhb/uploaded%20page.png" alt="" /></p>

<h2>Step 5, Open Xcode, check out the project from your Github repo</h2>

<p>Close Github client for Mac, delete all the files and folders you created before, including <strong>MyXcodeProject</strong> and <strong>MyXcodeProjectDemo</strong>. Yes, you don’t need them any more, it’s all being managed by Github already!</p>

<p>Open the Xcode application, select <code>Check out an existing project</code>.
In the next page, you’ll be able to select on a repo to check out, or in this case, you should <strong>paste</strong> the link of your repo into the textfield.</p>

<p><img src="https://dl.dropboxusercontent.com/s/848mc6fu1r6lwmi/check%20out.png" alt="" /></p>

<p>Select a proper location that you’d like to put your project for  long term.</p>

<h2><strong>Once it’s finished, you’ll have the project ready for you to develop with source control by Github enabled. Try to make your first modification on the source code, then commit&amp;push it to Github &ndash; <em>in Xcode select <code>Source Control -&gt; commit</code> or press <code>shift + command + C</code>, and make sure you’ve checked the <code>push to remote</code> in the following window </em></strong>.</h2>

<p><img src="https://dl.dropboxusercontent.com/s/nkrdq6aus7u2wnk/commit.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS7 Auto Layout]]></title>
    <link href="http://zhuhuihuihui.github.io/blog/2014/07/22/ios7-auto-layout/"/>
    <updated>2014-07-22T22:33:56+08:00</updated>
    <id>http://zhuhuihuihui.github.io/blog/2014/07/22/ios7-auto-layout</id>
    <content type="html"><![CDATA[<p>If you don’t supply any constraints at all, Xcode <strong>automatically</strong> assigns a set of default constraints, known as the automatic constraints. <em>It does this at compile time when your app is built, not at design time.</em></p>

<p>Xcode only creates automatic constraints if you did not set any constraints of your own. As soon as you add a single constraint, you tell Xcode that you’re now taking responsibility for this view. Xcode will no longer make any automatic constraints and expects you to add any other constraints this view needs.</p>

<p>When it comes to Auto Layout, <strong>orange is bad</strong>. Interface Builder drew two orange boxes: The <code>dashed box</code> displays the view’s frame according to Auto Layout. The <code>solid orange box</code> is the view’s frame according to how you placed it in the scene.</p>

<p><img src="http://cdn2.raywenderlich.com/wp-content/uploads/2013/09/Constraints-button-top-right.png" title="dashed box &amp; solid orange box" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to use NSCoding]]></title>
    <link href="http://zhuhuihuihui.github.io/blog/2014/02/25/how-to-use-nscoding/"/>
    <updated>2014-02-25T00:09:04+08:00</updated>
    <id>http://zhuhuihuihui.github.io/blog/2014/02/25/how-to-use-nscoding</id>
    <content type="html"><![CDATA[<p>Let&rsquo;s say you want to archive or save a object called <code>City</code>. The <code>City.h</code> is declared as below:
```objectivec</p>

<pre><code>@interface City : NSObject

@property (nonatomic, strong) NSString *name;
@property (nonatomic, strong) NSString *state;
@property (nonatomic) NSInteger population;
@property (nonatomic, strong) NSString *note;

@end
</code></pre>

<p>```</p>

<p>The first thing you need to do is to make your class confirm to <code>NSCoding</code> protocol. This is simply telling the system,</p>

<blockquote><p>&ldquo;Ok, i&rsquo;m gonna use NSCoding to help archive and unarchive this class.&rdquo;</p></blockquote>

<p>Next, you need to add two methods to your <code>City.h</code>, which will actually help you doing the archive and unarchive works.
```objectivec</p>

<pre><code>- (id)initWithCoder:(NSCoder *)aDecoder;

- (void)encodeWithCoder:(NSCoder *)aCoder;
</code></pre>

<p><code>
You will need to implement these two methods by yourself, but you will never call these two method manually. We will explain it later. Add implementation of these two methods to `City.m`,
</code>objectivec</p>

<pre><code>- (void)encodeWithCoder:(NSCoder *)aCoder
{
    [aCoder encodeObject:self.name forKey:@"name"];
    [aCoder encodeObject:self.state forKey:@"state"];
    [aCoder encodeObject:[NSNumber numberWithInteger:self.population] forKey:@"population"];
    [aCoder encodeObject:self.note forKey:@"note"];
}

- (id)initWithCoder:(NSCoder *)aDecoder
{
    self = [super init];
    if (self)
    {
        self.name = [aDecoder decodeObjectForKey:@"name"];
        self.state = [aDecoder decodeObjectForKey:@"state"];
        self.population = [[aDecoder decodeObjectForKey:@"population"] integerValue];
        self.note = [aDecoder decodeObjectForKey:@"note"];
    }
    return self;
}
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
